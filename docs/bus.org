* The CAAR Device Bus
The device bus is where every device is connected, similar to PCI on most machines.

** Structure
To get the bus address, one needs to read from port #1

The bus has the following structure:

#+begin_src c
  struct BusDevice
  {
      uint32_t type;
      uint32_t addr;
  };

  struct Bus
  {
     uint32_t device_count;
     BusDevices devices[32];
  };
#+end_src

** Getting devices
Getting a device is as easy as looping through the bus's devices and checking the type of the current device.

*** Example
For example, to get the disk, you could do this:

#+begin_src c
  Bus *bus = (Bus*)io_read(1);

  for(int i = 0; i < bus->device_count; i++)
  {
      if(bus->devices[i].type == DISK)
      {
         disk_addr = bus->devices[i].addr;
         break;
      }
  }
#+end_src
** Device commands
Commands are a way to send and receive data from a bus device. To send a command, you need to write a buffer address to the device's address.
*** Example
For example, if we want to send 10 to a device we could do this:

#+begin_src c

  uint8_t *buffer = malloc(1);
  *buffer = 10;
  
  write_to_addr(device.addr, (uintptr_t)buffer);

#+end_src
